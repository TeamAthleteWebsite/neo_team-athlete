// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProgramType {
  PERSONAL
  SMALL_GROUP
  PROGRAMMING
}

model Program {
  id          String      @id @default(cuid())
  type        ProgramType
  title       String
  description String      @db.Text
  imageUrl    String?
  price       Float
  duration    Int // in minutes
  active      Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([type])
}

enum UserRole {
  COACH
  ADMIN
  CLIENT
  PROSPECT
}

enum Gender {
  MALE
  FEMALE
}

model User {
  id            String    @id
  email         String
  emailVerified Boolean
  image         String?
  sessions      Session[]
  accounts      Account[]

  name      String
  lastName  String?
  phone     String?
  bio       String?
  specialty String? // Spécialité du coach
  height    Int?
  weight    Int?
  birthYear Int?
  gender    Gender?
  goal      String?
  roles     UserRole[] @default([PROSPECT])

  isOnboarded Boolean @default(false)

  createdAt DateTime
  updatedAt DateTime

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
